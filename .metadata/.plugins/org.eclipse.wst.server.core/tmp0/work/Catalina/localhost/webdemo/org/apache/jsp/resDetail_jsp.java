/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.21
 * Generated at: 2019-07-01 04:34:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.jaovo.msg.model.Resource;
import com.jaovo.msg.dao.*;

public final class resDetail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.jaovo.msg.dao");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.jaovo.msg.model.Resource");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("    <link href=\"css/main.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("    <link href=\"css/else.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("</head>\r\n");
      out.write("<script>    \r\n");
      out.write("    function resLoad(){\r\n");
      out.write("    \tvar target=document.getElementById(\"title\");\r\n");
      out.write("    \tvar content=target.innerHTML;\r\n");
      out.write("    \tvar index=content.indexOf(\":\");\r\n");
      out.write("    \tvar name=content.substr(index+1);\r\n");
      out.write("        window.location=\"DownloadHandleServlet?textValue=\"+name;\r\n");
      out.write("        }\r\n");
      out.write("</script>\r\n");
      out.write("<body>\r\n");

    //接收客户端传递过来的参数,获取下载列表点击项信息
    String resname =request.getParameter("textValue");
    System.out.print(resname);
    ResourceDAOImpl resDao = new ResourceDAOImpl();
	Resource resource=resDao.loadByResname(resname);
	request.setAttribute("res", resource);

      out.write("\r\n");
      out.write("<div class=\"top\">\r\n");
      out.write("    <div class=\"top_content\">\r\n");
      out.write("       <ul>\r\n");
      out.write("          <li><a href=\"#\" onclick=\"\">注册</a></li>\r\n");
      out.write("          <li><a href=\"#\" onclick=\"\">登录</a></li>\r\n");
      out.write("       </ul>\r\n");
      out.write("    </div>\r\n");
      out.write("</div><!--top结束-->\r\n");
      out.write("\r\n");
      out.write("<div class=\"wrap\"  style=\"background:url(images/sharebg.jpg); padding-bottom:20px;\">\r\n");
      out.write("   <div class=\"logo\">\r\n");
      out.write("          <img src=\"images/logo.png\" />\r\n");
      out.write("   </div><!--logo结束-->\r\n");
      out.write("   <div class=\"nav\">  \r\n");
      out.write("      <div class=\"nav_mid\">\r\n");
      out.write("         <div class=\"nav_mid_left\">\r\n");
      out.write("            <ul>\r\n");
      out.write("               <li><a href=\"index.html\">首页</a></li>\r\n");
      out.write("               <li><a href=\"ShowResList\" style=\"color:#FF9\">资源中心</a></li>\r\n");
      out.write("               <li><a href=\"ShowMsgList\">交流论坛</a></li>\r\n");
      out.write("               <li><a href=\"upload.jsp\">我要分享</a></li>\r\n");
      out.write("               <li><a href=\"userInfo.jsp\">个人信息</a></li>\r\n");
      out.write("            </ul>\r\n");
      out.write("         </div>\r\n");
      out.write("         \r\n");
      out.write("         <div class=\"nav_mid_right\">\r\n");
      out.write("            <form action=\"\" method=\"post\">\r\n");
      out.write("               <input type=\"text\" class=\"searText\"/>\r\n");
      out.write("            </form>\r\n");
      out.write("         </div>\r\n");
      out.write("      </div><!--nav_mid结束-->\r\n");
      out.write("   </div><!--nav结束-->  \r\n");
      out.write("    \r\n");
      out.write("   <div class=\"main\">      \r\n");
      out.write("      <div class=\"detail\" >\r\n");
      out.write("        <div class=\"detail_left\">\r\n");
      out.write("           <div class=\"img_boder\"><img src=\"images/default.jpg\"></div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <!--开始输出传递的信息-->\r\n");
      out.write("        <div class=\"detail_right\">\r\n");
      out.write("           <div class=\"de_title\">\r\n");
      out.write("             <img src=\"images/图片3.png\">\r\n");
      out.write("             <span id=\"title\">资料名称:");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${res.resoceName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span>\r\n");
      out.write("           </div>\r\n");
      out.write("           <div class=\"de_secTitle\">\r\n");
      out.write("             <span>资料分享者:");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${res.resoceAuthor}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span>\r\n");
      out.write("             <span>上传日期:");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${res.date}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span>\r\n");
      out.write("           </div>\r\n");
      out.write("           <div class=\"de_func\">\r\n");
      out.write("             <a><img src=\"images/view.png\">查看</a>\r\n");
      out.write("             <a onclick=\"resLoad()\"><img src=\"images/down.png\">下载</a>\r\n");
      out.write("             <a><img src=\"images/com.png\">评论</a>\r\n");
      out.write("           </div>\r\n");
      out.write("           <div class=\"clear\"></div>\r\n");
      out.write("           <div class=\"de_content\">\r\n");
      out.write("             <div class=\"type\">资料类别：");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${res.type}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>\r\n");
      out.write("             <div class=\"type\">资料简述：");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${res.describe}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>\r\n");
      out.write("           </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <!--结束输出传递的信息-->\r\n");
      out.write("      </div>\r\n");
      out.write("     \r\n");
      out.write("   </div><!--main结束-->\r\n");
      out.write("</div><!--wrap结束-->\r\n");
      out.write("<div class=\"clear\"></div>\r\n");
      out.write("<div class=\"footer\">\r\n");
      out.write("  <div class=\"footer_content\">\r\n");
      out.write("        <img src=\"images/footer.png\" />\r\n");
      out.write("        <br/>\r\n");
      out.write("        <span>联系方式：邮箱crystalhzr@163.com</span>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
